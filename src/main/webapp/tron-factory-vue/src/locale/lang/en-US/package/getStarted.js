export default {
  startCreate: 'Get started',
  descriptionChain: 'Build your own Blockchain on TRON',

  // 创建/修改区块链
  chainManage: {
    startCreate: 'Get Started',
    updateChain: 'Edit',
    baseInfo: 'Blockchain Information',
    chainNameLabel: 'Blockchain Name',
    chainNameTips: 'Blockchain name is empty',
    chainNameCheckLength: 'It is composed of letters and numbers and the length cannot exceed 30',
    encryptionLabel: 'Signature Algorithm',
    encryptionTips: 'Signature algorithm of the nodes in a blockchain must be same',
    p2pVersionLabel: 'p2pVersion ',
    p2pVersionTips: 'P2pversion of the nodes in a blockchain must be same',
    p2pVersionCheckMainNet: 'Illegal!The p2pversion of TRON NETWORK is 11111.',
    p2pVersionCheckTestNet: 'Illegal!The p2pversion of test TRON NETWORK is 20180622.',
    p2pVersionCheckSpecialNet: 'Illegal!1 is reserved.',
    consensusModuleLabel: 'Consensus Algorithm',

    // 创世账户
    genesisAccount: 'Genesis Accounts',
    assetDialogTitle: 'Add Account',
    accountNameLabel: 'accountName',
    accountNameTips: 'The name of account',
    accountTypeLabel: 'accountType',
    accountTypeTips: 'The type of account',
    addressLabel: 'address',
    addressTips: 'The encoding of addresss is Base58Check',
    addressCheckValid: 'Invaidl address',
    balanceLabel: 'balance',
    balanceTips: 'Initial balance of account',

    existChain: 'The blockchain have been created',
  },

  // 区块链信息、节点列表信息
  dashboard: {
    dashboard: 'Dashboard',
    chainInfo: 'Blockchain Information',
    chainName: 'Blockchain Name',
    encryption: 'Signature Algorithm',
    p2pVersion: 'p2pVersion',
    status: 'Blockchain Status',
    unPublish: 'Ready',
    publishing: 'Releasing',
    published: 'Release',
    statusTips: 'The release of a blockchain can procedure blocks',
    explorer: 'Explorer',
    stopDeleteChain: 'Active node exists',
    deleteChainWarningTips: 'Do you confirm to delete？',

    // 节点列表
    nodeInfo: 'Nodes List',
    addNode: 'Add Node',
    ip: 'IP',
    listenPort: 'Listen Port',
    nodeType: 'Node Type',
    superNode: 'SR',
    fullNode: 'Full Node',
    configStatus: 'Config Status',
    statusOK: 'Settled',
    statusNO: 'Unsettled',
    deployStatus: 'Node Status',
    deploySuccess: 'Running',
    deployStop: 'Stopped',
    createNodeTime: 'Created Time',
    nodeConfig: 'Config',
    stopRunNode: 'Stop',

    runNode: 'Start',
    pleaseAddNode: 'Nodes list is empty.',
    pleaseSelectNodes: 'No nodes selected',
    pleaseConfigNodes: 'All nodes configuration must be setteld',
    initRunSRCheck: 'When running the blockchain for the first time, the number of SR nodes in the selected list must be >> = 1 and an odd number.',
    runNodeDialogTitle: 'Start',
    checkFilePath: 'Please upload a valid compilation and execution file (default path: /build/distributions/java-tron-1.0.0.zip)',
    inputFilePath: 'Please enter the java-tron package path',
    endRightPath: 'The package path ends with java-tron-1.0.0.zip',
    runningNode: 'Starting',
    runFailTips: 'Fail to run nodes.Please check node logs.',
    runFailSomeTips: 'Warning.Part of nodes faile to run.Please check node logs.',
    runExistTips: 'Deployment is running.Please try later.',
    runSuccessTips: 'Success.',

    stopRunNodeTips: 'Do you confirm to stop the node',
    logDialogTitle: 'Deployment Log',
    emptyLog: 'No logs',
    loadingLog: 'Log is loading...',
  },

  // 添加、修改、查看节点
  nodesManage: {
    addNode: 'Add Node',
    editNode: 'Edit Node',
    nodeDetail: 'Node Details',
    opUnValidNode: 'Invalid node',
    viewUnValidNode: 'Invalid node',

    serverInfo: 'Server Configuration',
    ip: 'Server IP',
    ipPlaceholder: 'Please enter the server ip address',
    ipCheckRight: 'Please enter a valid IP address',
    ipCheckLocalhost: 'Local IP is not supported now',
    listenPort: 'Listen Port',
    listenPortPlaceholder: 'Please enter listen port',
    sshInfo: 'SSH Configuration',
    port: 'SSH Port',
    portPlaceholder: 'Please enter the port enabled by ssh',
    sshConnectType: 'Secure authentication',
    byPassword: 'Passpord',
    byPublicKey: 'Public key',
    sshUserName: 'SSH Username',
    sshUserNamePlaceholder: 'Please enter the username to connect to ssh',
    sshPassword: 'SSH Uassword',
    sshPasswordPlaceholder: 'Please enter the password to connect to ssh',
    nodeType: 'Node Type',
    superNode: 'Super Representive',
    superNodeTips: 'Super Representative(abbr: SR) is the block producer in the block chain.They verify<br/>the transactions and write the transactions into the blocks in turn',
    fullNode: 'Full Node',
    fullNodeTips: 'FullNode has the complete block chain data, can update data in real time. <br/>It can broadcast the transactions and provide api service',
    superNodeInfo: 'SR Configuration',
    url: 'URL',
    urlTips: 'Office website of SR',
    urlPlaceholder: 'Please input URL for the SR',
    voteCount: 'Please input vote count',
    voteCountTips: 'Determine the initial ordering of SR',
    voteCountPlaceholder: 'Please input vote count',
    voteCountCheckMax: 'Vote Count exceeds maximum',
    publicKey: 'address',
    publicKeyTips: 'The encoding of addresss is Base58Check',
    publicKeyPlaceholder: 'Please enter the address with Base58Check encoded',
    privateKey: 'privateKey',
    privateKeyTips: 'Please input 256-bits private key (Hexadecimal encoded)',
    privateKeyPlaceholder: 'Please input 256-bits private key (Hexadecimal encoded)',
    privateKeyCheck: 'Please enter a private key with a string length of 64',

    // 提交
    saveAddressPriKey: 'Please keep your address and private key in a safe place. Once the node is created, it will not be recovered.',
    sshConnectFail: 'SSH is unable to connect,please check the SSH configuration',
    addressNotPrivateKey: 'Private key and address does not match',
    addNodeSuccess: 'Successfully added',
    updateNodeSuccess: 'Successful updated',
    deleteNodeTips: 'Do you confirm to delete this node?',
    deleteNodeSuccess: 'Successfull deleted',
    deleteNodeRunningTips: 'Fail to delete.The node is active.',
    deleteNodeLastTips: 'If the last node is deleted, the blockchain where this node is located will be deleted at the same time. Do you want to continue?',
    deleteNodeServerError: 'Server error',
  }
}
